#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors/studio_unlock.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// Left bottom row pinky 2nd column

#ifndef LB5

#define LB5 24

#endif

// Right bottom row pinky 2nd column
#ifndef RB5

#define RB5 35

#endif

#define DEF 0
#define SYM 1
#define NUM 2
#define ADJ 3
#define QUICK_TAP_MS 175
#define TAPPING_TERM_MS 150

/ {
    /* assign `input-listener` to all pointing devices */
    /* &glidepoint0 on central, &glidepoint1 on peripheral */

    tpad_central_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&glidepoint0>;
        y-invert;
        scale-multiplier = <2>;

        // xy-swap;
        // x-invert;
    };

    tpad_peripheral_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&glidepoint1>;
        layers = <DEF SYM ADJ>;
        y-invert;
        scale-multiplier = <2>;

        /* NOTE: do NOT override event code here, */
        /*       let Cirque glidepoint reports click from taps */
        // evt-type = <INPUT_EV_REL>;
        // x-input-code = <INPUT_REL_X>;
        // y-input-code = <INPUT_REL_Y>;
    };

    tpad_peripheral_scroll {
        compatible = "zmk,input-behavior-listener";
        device = <&glidepoint1>;
        layers = <NUM>;

        /* NOTE: only apply input-code overriding for INPUT_EV_REL */

        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        bindings = <&ib_wheel_scaler 1 8>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <3 1>;
            then-layer = <4>;
        };
    };

    combos { compatible = "zmk,combos"; };

    behaviors {
        lq: layer_toggle_quick {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <TAPPING_TERM_MS>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&mo>, <&kp>;
        };

        th: tap_hold {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            label = "Tap/Hold";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default";
            bindings = <
&kp ESC         &kp Q     &kp W      &kp E        &kp R          &kp T      &kp Y  &kp U    &kp I        &kp O      &kp P          &kp PIPE
&sk TAB         &kp A     &kp S      &kp D        &kp F          &kp G      &kp H  &kp J    &kp K        &kp L      &kp SEMICOLON  &kp SQT
&sk LEFT_SHIFT  &kp Z     &kp X      &kp C        &kp V          &kp B      &kp N  &kp M    &kp COMMA    &kp DOT    &kp FSLH       &sk RSHFT
                                     &kp LCMD                                               &kp ENTER
                &sk LALT  &sk LCTRL  &lq 1 SPACE  &kp BACKSPACE                    &kp DEL  &lq 2 SPACE  &sk RCTRL  &sk RALT
            >;
        };

        num_layer {
            display-name = "Numbers";
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6       &none            &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_PLUS      &kp KP_MINUS
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12      &kp KP_DOT       &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_MULTIPLY  &kp KP_DIVIDE
&trans  &none   &none   &none    &none    &none        &kp KP_NUMBER_0  &kp KP_N1  &kp KP_N2  &kp KP_N3  &none            &trans
                        &trans                                                     &trans
        &trans  &trans  &trans   &trans                                 &trans     &trans     &trans     &trans
            >;
        };

        sym_layer {
            display-name = "Symbols";
            bindings = <
&th TILDE GRAVE  &kp EXCL          &kp AT             &kp HASH        &kp DLLR         &kp PRCNT      &kp CARET  &kp AMPS   &kp ASTERISK  &kp LPAR   &kp RPAR            &th UNDERSCORE MINUS
&none            &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &none          &kp LEFT   &kp DOWN   &kp UP        &kp RIGHT  &th PIPE BACKSLASH  &th PLUS EQUAL
&trans           &none             &none              &kp PLUS        &kp UNDER        &none          &none      &kp MINUS  &kp EQUAL     &none      &none               &trans
                                                      &trans                                                                &trans
                 &trans            &trans             &trans          &trans                                     &trans     &trans        &trans     &trans
            >;
        };

        adj_layer {
            display-name = "Adjust";
            bindings = <
&bootloader  &bt BT_CLR    &none         &to 4         &none           &none             &none       &none             &none       &kp C_VOL_UP  &none   &bootloader
&sys_reset   &none         &none         &none         &studio_unlock  &out OUT_TOG      &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOL_DN  &none   &sys_reset
&trans       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4      &none       &none             &none       &none         &none   &trans
                                         &trans                                                                        &trans
             &trans        &trans        &trans        &trans                                        &trans            &trans      &trans        &trans
            >;

            // F15 and F14 are brightness controls for macOS
        };

        game_layer {
            bindings = <
&kp TAB    &kp N1  &kp Q     &kp W      &kp E  &kp R      &trans  &trans  &trans   &trans  &trans  &trans
&kp LSHFT  &kp N2  &kp A     &kp S      &kp D  &kp F      &trans  &trans  &trans   &trans  &trans  &trans
&kp LCTRL  &kp N3  &kp N4    &kp X      &kp C  &kp V      &trans  &trans  &trans   &trans  &trans  &trans
                             &kp G                                        &kp ESC
           &kp N4  &kp LALT  &kp SPACE  &kp B                     &trans  &trans   &trans  &to 0
            >;
        };
    };
};
